---
const { pathname } = Astro.url;

const crumbs = pathname
	.replace(/\/+$/, "") // remove possible trailing slash
	.split("/") // split by slash to get each section of the path
	.slice(1);
---

{
	crumbs.length > 0 && (
		<div class="text-md breadcrumbs p-3">
			<ul>
				<li>
					<a href="/">Home</a>
				</li>
				{crumbs.map((crumb, index) => {
					// becasue the breadcrumbs are built using the url, we need to decode each component
					// to prevent url encoded text appearing i.e stop "test%20blog" from rendering, and instead
					// render "test blog"
					const decodedCrumb = decodeURIComponent(crumb);

					const href = `/${crumbs.slice(0, index + 1).join("/")}`;
					const isLastCrumb = crumbs.length - 1 === index;

					// this will make the last crumb lowercase, used for projects and blogposts,
					// but will keep things like
					// - Home > Projects
					// - Home > Resume
					// capitalised
					const letterCase =
						isLastCrumb && crumbs.length > 1 ? "lowercase" : "capitalize";

					return (
						<li class={letterCase}>
							{
								// if last crumb, return just text, no link
								isLastCrumb ? decodedCrumb : <a {href}>{decodedCrumb}</a>
							}
						</li>
					);
				})}
			</ul>
		</div>
	)
}
