---
import BaseLayout from "@layouts/BaseLayout.astro";
import {
	type InferGetStaticParamsType,
	type InferGetStaticPropsType,
} from "astro";
import { getAllTags } from "./tags";
import { getCollection } from "astro:content";
import PageHeading from "@components/PageHeading.astro";
import Card from "@components/Card.astro";
import BlogCard from "@components/BlogCard.astro";
import { filterDraftArticles } from "src/filter";

export async function getStaticPaths() {
	const tags = await getAllTags();
	const projects = await getCollection("project", filterDraftArticles);
	const posts = await getCollection("blog", filterDraftArticles);

	return tags.map((tag) => ({
		params: { tag },
		props: {
			projects: projects.filter((p) => p.data.tags?.includes(tag)),
			posts: posts.filter((p) => p.data.tags?.includes(tag)),
		},
	}));
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { tag } = Astro.params as Params;
const { projects, posts } = Astro.props as Props;

const hasPosts = posts.length > 0;
const hasProjects = projects.length > 0;
const heading =
	hasPosts && hasProjects
		? "Posts and Projects"
		: hasPosts
		? "Posts"
		: hasProjects
		? "Projects"
		: "Things";
---

<BaseLayout title={`${tag} | Jay Parry`}>
	<PageHeading>
		{heading} about <span
			class="text-primary"
			transition:name={tag}
		>
			{tag}
		</span>
	</PageHeading>

	{
		projects.length > 0 && (
			<section class="space-y-6 pt-6">
				<h2 class="text-3xl font-bold underline">Projects</h2>
				<div class="space-y-10">
					{projects.map((p) => (
						<Card
							title={p.data.title}
							to={`/projects/${p.slug}`}
							content={p.data.description}
							image={p.data.image}
						/>
					))}
				</div>
			</section>
		)
	}

	{
		posts.length > 0 && (
			<section class="space-y-6 pt-6">
				<h2 class="text-3xl font-bold underline">Posts</h2>
				<div class="space-y-10">
					{posts.map((p) => (
						<BlogCard
							title={p.data.title}
							publishDate={p.data.publishDate}
							to={`/blog/${p.slug}`}
							description={p.data.description}
						/>
					))}
				</div>
			</section>
		)
	}
</BaseLayout>
